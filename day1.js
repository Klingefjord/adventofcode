/*
    Day 1
    Problem: http://adventofcode.com/2017/day/1
*/


const assert = require('assert')

function mainFunction(numAsString) {
    let counter = 0;

    for (var i = 0; i < numAsString.length; i++) {
        // compare last digit with first digit
        let secondDigit = i == numAsString.length - 1 ? numAsString[0] : numAsString[i + 1]
        counter += numAsString[i] == secondDigit ? numAsString[i] * 1 : 0
    }

    return counter;
}

const runTests = () => {
    assert.equal(mainFunction('1111'), 4, `1111 test failed. returned ${mainFunction(1111)}`)
    assert.equal(mainFunction('1234'), 0, `1234 test failed. returned ${mainFunction(1234)}`)
    assert.equal(mainFunction('91212129'), 9, `91212129 test failed. returned ${mainFunction(91212129)}`)
    assert.equal(mainFunction('1122'), 3, `1122 test failed. returned ${mainFunction(1122)}`)

    console.log("All tests run successfully")
}


// PART 2:

function mainFunctionPartTwo(numAsString) {
    let counter = 0
    let length = numAsString.length
    let halfWayAround = Math.round(length / 2)

    for (var i = 0; i < length; i++) {
        // compare last digit with first digit
        let secondDigit = i + halfWayAround < length ? numAsString[i + halfWayAround] : numAsString[halfWayAround - (length - i)]
        counter += numAsString[i] == secondDigit ? numAsString[i] * 1 : 0
    }
    return counter;
}

const runTestsPartTwo = () => {
    assert.equal(mainFunctionPartTwo('1212'), 6, `1212 test failed. returned ${mainFunctionPartTwo('1212')}`)
    assert.equal(mainFunctionPartTwo('1221'), 0, `1221 test failed. returned ${mainFunctionPartTwo('1221')}`)
    assert.equal(mainFunctionPartTwo('123425'), 4, `123425 test failed. returned ${mainFunctionPartTwo('123425')}`)
    assert.equal(mainFunctionPartTwo('123123'), 12, `123123 test failed. returned ${mainFunctionPartTwo('123123')}`)
    assert.equal(mainFunctionPartTwo('12131415'), 4, `12131415 test failed. returned ${mainFunctionPartTwo('12131415')}`)
    assert.equal(mainFunctionPartTwo('13245'), 0, `13245 test failed. returned ${mainFunctionPartTwo('12131415')}`)

    console.log("All tests on part two run successfully")
}

runTestsPartTwo();

console.log(`The answer is ${mainFunctionPartTwo}`)